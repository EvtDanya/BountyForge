# syntax=docker/dockerfile:1

FROM python:3.12-slim-bookworm

# install system dependencies and tools
RUN apt-get update \
    && apt-get install -y build-essential git libpcap-dev wget ca-certificates nmap \
    && rm -rf /var/lib/apt/lists/

ENV GO_VERSION=1.21.7
RUN wget -O go.tar.gz https://go.dev/dl/go${GO_VERSION}.linux-amd64.tar.gz \
    && tar -C /usr/local -xzf go.tar.gz \
    && rm go.tar.gz
ENV PATH="/usr/local/go/bin:/root/go/bin:${PATH}"

RUN go install -v github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest \
    && go install -v github.com/projectdiscovery/httpx/cmd/httpx@latest \
    && go install -v github.com/projectdiscovery/nuclei/v3/cmd/nuclei@latest \
    && go install -v github.com/ffuf/ffuf/v2@latest \
    && nuclei -update-templates

# wordlists
WORKDIR /tmp/SecLists
RUN git clone --depth 1 --filter=blob:none --sparse https://github.com/danielmiessler/SecLists.git . \
    && git sparse-checkout set Discovery/Web-Content Discovery/DNS \
    && mkdir -p /app/wordlists/web-content /app/wordlists/dns \
    && find Discovery/Web-Content -maxdepth 1 -type f -exec cp {} /app/wordlists/web-content/ \; \
    && find Discovery/DNS         -maxdepth 1 -type f -exec cp {} /app/wordlists/dns/         \; \
    && rm -rf /tmp/SecLists

# application
WORKDIR /app

COPY ./requirements.txt ./requirements.txt
# COPY ./pyproject.toml ./pyproject.toml
RUN ["python", "-m", "pip", "install", "-r", "requirements.txt"]
# RUN ["poetry", "install"]

COPY ./src/bountyforge ./bountyforge
COPY ./src/backend ./backend
ENV PYTHONPATH="/app/"

RUN mkdir -p /var/log/bountyforge

COPY ./src/bountyforge/scripts/run.py ./run.py

CMD ["python", "run.py"]
# CMD ["poetry", "run", "python", "run.py"]
